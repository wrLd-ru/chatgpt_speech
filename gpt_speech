import telebot
import io
import os
from google.cloud import speech_v1p1beta1 as speech
import openai
from telebot.types import Message

# инициализация Telegram Bot API
bot = telebot.TeleBot('6257687637:AAH2AvugxMugWot5I8Deuql8HnR3UC7MLZg')

# инициализация Google Cloud API
client = speech.SpeechClient.from_service_account_json('testchatgpt-384619-bc16e71b1229.json')

# инициализация OpenAI API
openai.api_key = "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"

# обработчик команды /start
@bot.message_handler(commands=['start'])
def send_welcome(message: Message):
    bot.reply_to(message, 'Привет! Я могу преобразовать речь на русском языке в текст и задать вопросы ChatGPT. Просто отправь мне аудиосообщение.')

# обработчик аудиосообщений
@bot.message_handler(content_types=['voice'])
def handle_audio(message: Message):
    try:
        # скачиваем аудиофайл в буфер
        file_info = bot.get_file(message.voice.file_id)
        file = io.BytesIO(bot.download_file(file_info.file_path))

        # передаем файл на распознавание Google Cloud API
        audio = speech.RecognitionAudio(content=file.read())
        config = speech.RecognitionConfig(
            encoding=speech.RecognitionConfig.AudioEncoding.OGG_OPUS,
            language_code='ru-RU',
            enable_word_time_offsets=True
        )
        response = client.recognize(config=config, audio=audio)

        # получаем распознанный текст из ответа Google Cloud API
        result = ''
        for result in response.results:
            alternative = result.alternatives[0]
            for word_info in alternative.words:
                word = word_info.word
                start_time = word_info.start_time.total_seconds()
                end_time = word_info.end_time.total_seconds()
                result += '{} '.format(word)

        # задаем вопрос ChatGPT с помощью OpenAI API
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a chatbot"},
                {"role": "user", "content": result},
            ]
        )
        #response = openai.Completion.create(
       #     engine="text-davinci-002",
        #    prompt=result,
        #    max_tokens=50,
        #    n=1,
        #    stop=None,
        #    temperature=0.7
        #)

        # отправляем ответ пользователю
        bot.reply_to(message, response.choices[0].text)

    except Exception as e:
        print(e)
        bot.reply_to(message, 'Произошла ошибка. Попробуйте еще раз.')

# запускаем бота
bot.polling()
